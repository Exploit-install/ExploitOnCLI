<?php
// Update exploit databases
function update($opt, $reintentos = 5) { // atualizando BETA
	echo " \033[0;31mSTARTING UPDATE\033[0;37m\n";
	
	if (preg_match ( "/,/si", trim ( $opt ['update'] ) )) {
		$sDB = explode ( ",", $opt ["update"] );
	} else {
		$sDB [] = $opt ["update"];
	}
	
	foreach ( $sDB as $id => $whatDB ) {
		if (preg_match ( "/iedb/si", $whatDB ) or empty ( $whatDB )) {
			echo iedb ( $reintentos );
		}
		if (preg_match ( "/siph0n/si", $whatDB ) or empty ( $whatDB )) {
			echo siph0n ( $reintentos );
		}
		if (preg_match ( "/exploit-db/si", $whatDB ) or empty ( $whatDB )) {
			echo exploitdb ( $reintentos );
		} else if (preg_match ( "/exploitdb/si", $whatDB ) or empty ( $whatDB )) {
			echo exploitdb ( $reintentos );
		}
		if (preg_match ( "/packetstorm/si", $whatDB ) or empty ( $whatDB )) {
			echo packetstorm ( $reintentos );
		}
		if (preg_match ( "/exploit4arab/si", $whatDB ) or empty ( $whatDB )) {
			echo exploit4arab ( $reintentos );
		}
		if (preg_match ( "/cxsecurity/si", $whatDB ) or empty ( $whatDB )) {
			echo cxsecurity ( $reintentos );
		}
	}
	
	echo "\n\n\033[0;31m  DONE. \033[0;37m\n\n";
}
function iedb($reintentos) {
	echo "\n\033[0;30m------------------------------------------------------------------------------------------------------------------------------------------------------------------------\033[0;37m\n\n  \033[0;31mIEDB\n \033[0;30m--------------\033[0;37m\n";
	$dados = array (
			0 => 'remotes',
			1 => 'locals',
			2 => 'webapps',
			3 => 'dos',
			4 => 'shellcodes' 
	);
	
	if (! file_exists ( "update" . DIRECTORY_SEPARATOR . "iedb.txt" )) {
		echo "\n\033[0;37m  Raw file not found, downloading from repository.. ";
		$x = getsource ( "https://raw.githubusercontent.com/r00tmars/ExploitOnCLI/master/update/iedb.txt" );
		file_put_contents ( "update/iedb.txt", $x ['s'] );
		echo "DONE!\n";
	}
	
	foreach ( $dados as $id => $name ) {
		echo "\n  \033[0;31m$name\033[0;37m - PAGE : ";
		
		$np = 1;
		$tries = 0;
		while ( $np <= 500 ) {
			echo "\033[0;30m" . $np . "\033[0;37m";
			
			$x = getsource ( "http://iedb.ir/{$name}.html?page=$np" );
			
			http_error:
			if ($tries <= $reintentos) {
				if ($x ["i"] != 200 or $x ["i"] == 0) {
					echo "\n\t\033[0;31mRetrying...\033[0;30m[" . $x ["i"] . "]\033[0;37m ";
					$x = getsource ( "http://iedb.ir/{$name}.html?page=$np" );
					$tries ++;
					goto http_error;
				}
			} else {
				break;
			}
			
			preg_match_all ( '/<tr class="submit">(.*?)<\/tr>/s', $x ["s"], $a );
			
			if (empty ( $a [0] )) {
				break;
			}
			
			foreach ( $a [0] as $code ) {
				preg_match_all ( '#<td class="style1" nowrap="nowrap" width="62">(.*?)</td>#', $code, $date );
				preg_match_all ( '#<a href="(.*?)" target="_blank" class="style2">(.*?)</a>#i', $code, $urlEname );
				if (empty ( $urlEname [0] )) {
					preg_match_all ( '#<a href="(.*?)" target="_blank" class="style1">(.*?)</a>#i', $code, $urlEname );
				}
				$id = explode ( "exploits-", $urlEname [1] [0] );
				$id = explode ( '.html', $id [1] );
				$save [] = '"iedb","' . $name . '","' . $date [1] [0] . '","' . $id [0] . '","' . html_entity_decode ( trim ( $urlEname [2] [0] ) ) . '","http://iedb.ir/' . $urlEname [1] [0] . '"';
			}
			
			foreach ( $save as $bla => $info ) {
				$file = "update" . DIRECTORY_SEPARATOR . "iedb.txt";
				
				if (! preg_match ( "#" . $info . "#si", @file_get_contents ( $file ) )) {
					file_put_contents ( $file, $info . PHP_EOL, FILE_APPEND );
				} else {
					echo PHP_EOL;
					break (2);
				}
			}
			$save = null;
			echo ", ";
			$np ++;
		}
	}
}
function siph0n($reintentos) {
	echo "\n\033[0;30m------------------------------------------------------------------------------------------------------------------------------------------------------------------------\033[0;37m\n\n  \033[0;31mSIPH0N\n \033[0;30m--------------\033[0;37m\n";
	$dados = array (
			'webapps' 
	);
	
	if (! file_exists ( "update" . DIRECTORY_SEPARATOR . "siph0n.txt" )) {
		echo "\n\033[0;37m  Raw file not found, downloading from repository.. ";
		$x = getsource ( "https://raw.githubusercontent.com/r00tmars/ExploitOnCLI/master/update/siph0n.txt" );
		file_put_contents ( "update/siph0n.txt", $x ['s'] );
		echo "DONE!\n";
	}
	
	foreach ( $dados as $id => $name ) { // array of types
		echo "\n  \033[0;31m$name\033[0;37m - PAGE : ";
		
		$np = 1;
		$tries = 1;
		while ( $np <= 1000 ) {
			echo "\033[0;30m" . $np . "\033[0;37m";
			
			$x = getsource ( "http://siph0n.in/{$name}.php?page=$np" );
			
			http_error:
			if ($tries <= $reintentos) {
				if ($x ["i"] != 200 or $x ["i"] == 0) {
					echo "\n\t\033[0;31mRetrying...\033[0;30m[" . $x ["i"] . "]\033[0;37m ";
					$x = getsource ( "http://siph0n.in/{$name}.php?page=$np" );
					$tries ++;
					goto http_error;
				}
			} else {
				break;
			}
			
			preg_match_all ( '/<table width="597" align="center" border="0">(.*?)<\/table>/s', $x ["s"], $source );
			if (! isset ( $source [0] [0] )) {
				echo "\n [ERROR]:: An unexpected error happened\n";
				break;
			}
			$sourc = explode ( "</tr>", $source [0] [0] );
			unset ( $sourc [0] );
			unset ( $sourc [count ( $sourc )] );
			
			if (empty ( $sourc )) {
				break;
			}
			
			foreach ( $sourc as $code ) {
				preg_match_all ( '#<td class="style1" nowrap="nowrap" width="62">(.*?)</td>#', $code, $date );
				preg_match_all ( '#<a href="(.*?)" target="_blank" class="style2">(.*?)</a>#i', $code, $urlEname );
				if (empty ( $urlEname [0] )) {
					preg_match_all ( '#<a href="(.*?)" target="_blank" class="style1">(.*?)</a>#i', $code, $urlEname );
				}
				$x = explode ( '=', $urlEname [1] [0] );
				$save [] = '"siph0n","' . $name . '","' . $date [1] [0] . '","' . $x [1] . '","' . html_entity_decode ( trim ( $urlEname [2] [0] ) ) . '","http://siph0n.in/' . $urlEname [1] [0] . '"';
			}
			
			foreach ( $save as $bla => $info ) {
				$file = "update" . DIRECTORY_SEPARATOR . "siph0n.txt";
				$inf = explode ( "?", $info );
				
				if (! preg_match ( "#" . $inf [0] . "#si", @file_get_contents ( $file ) )) {
					file_put_contents ( $file, $info . PHP_EOL, FILE_APPEND );
				} else {
					echo PHP_EOL;
					break (2);
				}
			}
			$save = null;
			echo ", ";
			$np ++;
		}
	}
}
function exploitdb($reintentos) {
	echo "\n\033[0;30m------------------------------------------------------------------------------------------------------------------------------------------------------------------------\033[0;37m\n\n  \033[0;31mEXPLOIT-DB\n \033[0;30m--------------\033[0;37m\n";
	$types = array (
			'/remote/' => 'remotes',
			'/webapps/' => 'webapps',
			'/local/' => 'locals',
			'/dos/' => 'dos',
			'/shellcode/' => 'shellcodes' 
	);
	
	echo "\n  \033[0;31mALL TYPES\033[0;37m - PAGE : \033[0;30mALL\033[0;37m\n \033[0;31m*\033[0;37m This operation may take a little longer than normal \033[0;31m*\033[0;37m\n";
	
	$x = getsource ( "https://raw.githubusercontent.com/offensive-security/exploit-database/master/files.csv" );
	
	$tries = 0;
	http_error:
	if ($tries <= $reintentos) {
		if ($x ["i"] != 200 or $x ["i"] == 0) {
			echo "\n\t\033[0;31mRetrying...\033[0;30m[" . $x ["i"] . "]\033[0;37m ";
			$x = getsource ( "https://raw.githubusercontent.com/offensive-security/exploit-database/master/files.csv" );
			$tries ++;
			goto http_error;
		}
	} else {
		return;
	}
	
	if (count ( explode ( PHP_EOL, $x ['s'] ) ) >= count ( explode ( PHP_EOL, @file_get_contents ( "update" . DIRECTORY_SEPARATOR . "exploit-db.txt" ) ) ) or ! file_exists ( "update" . DIRECTORY_SEPARATOR . "exploit-db.txt" )) { // iniciando as operações caso o arquivo não existe ou o atual no repo. no github seja "maior"
		
		@unlink ( "update" . DIRECTORY_SEPARATOR . "exploitdb.txt" ); // Apagando o arquivo velho
		
		$file = explode ( PHP_EOL, $x ['s'] );
		$x = null;
		foreach ( $file as $f ) {
			preg_match_all ( '#(.*?),(.*?),"(.*?)",(.*?),.*,.*,.*,.*#', $f, $data ); // retirando as infos de cada linha
			
			foreach ( $types as $who => $why ) { // procurando pelo "tipo", seja WebApps, Local, DoS/PoC, Remote, etc..
				if (@preg_match ( "#$who#i", $data [2] [0] )) {
					$type = $why;
				}
			}
			if (empty ( $type )) {
				$type = "";
			}
			
			if (empty ( $data [4] [0] )) {
				$data [4] [0] = "UNAVAILABLE";
			}
			
			$line = @'"exploit-db","' . $type . '","' . $data [4] [0] . '","' . $data [1] [0] . '","' . html_entity_decode ( trim ( $data [3] [0] ) ) . '","https://www.exploit-db.com/exploits/' . $data [1] [0] . '/"';
			
			if (! empty ( $data [3] [0] )) {
				file_put_contents ( "update" . DIRECTORY_SEPARATOR . "exploitdb.txt", $line . PHP_EOL, FILE_APPEND );
			}
		}
	}
	
	$x = "";
}
function cxsecurity($reintentos) {
	echo "\n\033[0;30m------------------------------------------------------------------------------------------------------------------------------------------------------------------------\033[0;37m\n\n  \033[0;31mCXSECURITY\n \033[0;30m--------------\033[0;37m\n";
	$np = 1;
	$date_break = "2500-05-16"; // gambiarra
	$sheit = true;
	
	if (! file_exists ( "update" . DIRECTORY_SEPARATOR . "cxsecurity.txt" )) {
		echo "\n\033[0;37m  Raw file not found, downloading from repository.. ";
		$x = getsource ( "https://raw.githubusercontent.com/r00tmars/ExploitOnCLI/master/update/cxsecurity.txt" );
		file_put_contents ( "update/cxsecurity.txt", $x ['s'] );
		echo "DONE!\n";
	}
	
	echo "\n  \033[0;31mALL\033[0;37m - PAGE : ";
	$tries = 0;
	while ( $np <= 10000 ) {
		if ($sheit == false) {
			break;
		}
		echo $np;
		
		$x = getsource ( "https://cxsecurity.com/wlb/$np" );
		
		http_error:
		if ($tries <= $reintentos) {
			if ($x ["i"] != 200 or $x ["i"] == 0) {
				echo "\n\t\033[0;31mRetrying...\033[0;30m[" . $x ["i"] . "]\033[0;37m ";
				$x = getsource ( "https://cxsecurity.com/wlb/$np" );
				$tries ++;
				goto http_error;
			}
		} else {
			break;
		}
		
		preg_match_all ( "/<TABLE .*>(.+)<\/TABLE>/s", $x ["s"], $source ); // A
		$xpl = explode ( "Topic & Details", $source [0] [0] ); // MAIS
		$xpl = explode ( '<div ng-controller="PagIt">', $xpl [1] ); // PURA
		$xpl = explode ( '<thead>', $xpl [0] ); // GAMBIARRA
		unset ( $xpl [0] ); // BRASILEIRA
		
		foreach ( $xpl as $id => $code ) {
			preg_match_all ( "/<font color='#e1d1e1'>(.*?)<\/font>/i", $code, $date );
			preg_match_all ( '#<h6><A href="(.*?)" title=".*">(.*?)</A></h6>#', $code, $urlEname );
			preg_match_all ( '#<span class="label label-primary">(.*?)</span>#', $code, $type );
			
			$dados [$date [1] [0]] = array (
					'url' => $urlEname [1],
					'name' => $urlEname [2],
					'type' => $type [1] 
			);
		}
		
		foreach ( $dados as $date => $linkEname ) {
			$a = count ( $linkEname ["url"] ) - 1;
			$nps = 0;
			while ( $nps <= $a ) {
				if ($date <= $date_break) {
					$sheit = true;
					
					if (! isset ( $linkEname ["type"] [$nps] )) {
						$linkEname ["type"] [$nps] = "Unknown";
					}
					$x = explode ( 'WLB-', $linkEname ["url"] [$nps] );
					
					$file = "update" . DIRECTORY_SEPARATOR . "cxsecurity.txt";
					$info = '"cxsecurity","' . $linkEname ["type"] [$nps] . '","' . $date . '","' . $x [1] . '","' . html_entity_decode ( trim ( $linkEname ["name"] [$nps] ) ) . '","' . $linkEname ["url"] [$nps] . '"';
					
					if (! preg_match ( "#" . $info . "#si", @file_get_contents ( $file ) )) {
						file_put_contents ( $file, $info . PHP_EOL, FILE_APPEND );
					} else {
						echo PHP_EOL;
						break (3);
					}
				} else {
					$sheit = false;
					break;
				}
				$nps ++;
				if ($sheit == false) {
					break;
				}
			}
			$date_break = $date;
			if ($sheit == false) {
				break;
			}
		}
		
		$x = array (); // MAIS
		$dados = array (); // UMA
		$xpl = array (); // GAMBIARRA
		$linkEname = array (); // TIPICAMENTE
		$date = array (); // BRASILEIRA
		echo ", ";
		$np ++;
	}
}
function packetstorm($reintentos) {
	echo "\n\033[0;30m------------------------------------------------------------------------------------------------------------------------------------------------------------------------\033[0;37m\n\n  \033[0;31mPACKETSTORM\n \033[0;30m--------------\033[0;37m\n";
	
	if (! file_exists ( "update" . DIRECTORY_SEPARATOR . "packetstorm.txt" )) {
		echo "\n\033[0;37m  Raw file not found, downloading from repository.. ";
		$x = getsource ( "https://raw.githubusercontent.com/r00tmars/ExploitOnCLI/master/update/packetstorm.txt" );
		file_put_contents ( "update/packetstorm.txt", $x ['s'] );
		echo "DONE!\n";
	}
	
	echo "\n  \033[0;31mALL TYPES\033[0;37m - PAGE : ";
	$np = 1;
	
	$types = array (
			'local' => 'local',
			'remote' => 'remote',
			'denial of service' => 'dos',
			'web' => 'webapps',
			'shellcode' => 'shellcodes' 
	);
	
	$tries = 0;
	while ( $np <= 10000 ) {
		echo "\033[0;30m" . $np . "\033[0;37m";
		
		$x = getsource ( "https://packetstormsecurity.com/files/tags/exploit/page$np/" );
		
		http_error:
		if ($tries <= $reintentos) {
			if ($x ["i"] != 200 or $x ["i"] == 0) {
				echo "\n\t\033[0;31mRetrying...\033[0;30m[" . $x ["i"] . "]\033[0;37m ";
				$x = getsource ( "https://packetstormsecurity.com/files/tags/exploit/page$np/" );
				$tries ++;
				goto http_error;
			}
		} else {
			break;
		}
		
		if (preg_match ( "/<h1>No Results Found<\/h1>/si", $x ['s'] )) {
			break;
		}
		if (preg_match ( "/<h2>You Have Reached Nothingness<\/h2>/si", $x ['s'] )) {
			break;
		}
		
		preg_match_all ( "/<dl id=\".*\" class=\".*\">(.*?)<\/dl>/si", $x ['s'], $code );
		$code = explode ( "<dl", $code [0] [0] );
		
		unset ( $code [0] );
		unset ( $code [26] );
		unset ( $code [27] );
		unset ( $code [28] );
		
		foreach ( $code as $c ) {
			if (preg_match ( "/<dd class=\"md5\">/si", $c )) { // Se encontrar é porque é um exploit
				preg_match_all ( "#<dd class=\"act-links\"><a href=\"(.*?)\" title=#si", $c, $link ); // [1][0]
				preg_match_all ( "#B\">(.*?)</a></dt>#si", $c, $title ); // [1][0]
				preg_match_all ( "#/download/(.*?)/#si", $link [1] [0], $id ); // [1][0]
				preg_match_all ( "#Posted <a href=\"/files/date/(.*?)/\"#si", $c, $date ); // [1][0]
				preg_match_all ( "#<a href=\"/files/tags/(.*?)\">#si", $c, $t1pe ); // [1][0]
				
				if (preg_match ( "#Security Advisory#si", html_entity_decode ( $title [1] [0] ) )) {
					break;
				}
				
				$type = "";
				foreach ( $t1pe [1] as $sheit => $find ) {
					foreach ( $types as $tF => $tP ) {
						if (preg_match ( "/{$tF}/si", $find )) {
							$type = $tP;
							break;
						}
					}
				}
				if (empty ( $type )) {
					$type = "Unknown";
				}
				
				$file = "update" . DIRECTORY_SEPARATOR . "packetstorm.txt";
				$info = '"packetstorm","' . $type . '","' . $date [1] [0] . '","' . $id [1] [0] . '","' . html_entity_decode ( $title [1] [0] ) . '","https://packetstormsecurity.com' . $link [1] [0] . '"';
				
				if (! preg_match ( "#" . $info . "#si", @file_get_contents ( $file ) )) {
					file_put_contents ( $file, $info . PHP_EOL, FILE_APPEND );
				} else {
					echo PHP_EOL;
					break (2);
				}
			}
		}
		echo ", ";
		$np ++;
	}
}
function exploit4arab($reintentos) {
	$types = array (
			'webapps',
			'rl_exploits' 
	);
	
	echo "\n\033[0;30m------------------------------------------------------------------------------------------------------------------------------------------------------------------------\033[0;37m\n\n  \033[0;31mEXPLOIT4ARAB\n \033[0;30m--------------\033[0;37m\n";
	
	if (! file_exists ( "update" . DIRECTORY_SEPARATOR . "exploit4arab.txt" )) {
		echo "\n\033[0;37m  Raw file not found, downloading from repository.. ";
		$x = getsource ( "https://raw.githubusercontent.com/r00tmars/ExploitOnCLI/master/update/exploit4arab.txt" );
		file_put_contents ( "update/exploit4arab.txt", $x ['s'] );
		echo "DONE!\n";
	}
	
	foreach ( $types as $typ ) {
		$np = 1;
		echo "\n  \033[0;31m{$typ}\033[0;37m - PAGE : ";
		$type = $typ;
		
		$x = getsource ( "http://www.exploit4arab.org/$typ/$np" );
		preg_match_all ( "#<a href='.*' >(.*?)</a> </p><table border='1' align='center' width='98%'>#si", $x ["s"], $nm );
		if (empty ( $nm [1] [0] )) {
			$nm [1] [0] = 10000;
		}
		
		$tries = 0;
		while ( $np <= $nm [1] [0] ) {
			echo "\033[0;30m" . $np . "\033[0;37m";
			
			$x = getsource ( "http://www.exploit4arab.org/$typ/$np" );
			
			preg_match_all ( "#<tr>(.*?)</tr>#si", $x ["s"], $code );
			
			http_error:
			if ($tries <= $reintentos) {
				if ($x ["i"] != 200 or $x ["i"] == 0) {
					echo "\n\t\033[0;31mRetrying...\033[0;30m[" . $x ["i"] . "]\033[0;37m ";
					$x = getsource ( "http://www.exploit4arab.org/$typ/$np" );
					$tries ++;
					goto http_error;
				}
			} else {
				break;
			}
			
			foreach ( $code [1] as $c ) {
				$d = explode ( "</td>", $c );
				$date = trim ( str_replace ( "<td>", "", $d [0] ) );
				preg_match_all ( "#<td><a href='http://www.exploit4arab.org/exploits/(.*?)' title='(.*?)'>.*</a></td>#si", $c, $d );
				
				$file = "update" . DIRECTORY_SEPARATOR . "exploit4arab.txt";
				$info = '"exploit4arab","' . $type . '","' . $date . '","' . $d [1] [0] . '","' . html_entity_decode ( $d [2] [0] ) . '","http://www.exploit4arab.org/exploits/' . $d [1] [0] . '"';
				
				if (! preg_match ( "#" . $info . "#si", @file_get_contents ( $file ) )) {
					file_put_contents ( $file, $info . PHP_EOL, FILE_APPEND );
				} else {
					echo PHP_EOL;
					break (3);
				}
			}
			echo ", ";
			$np ++;
		}
	}
}

?>