<?php
// Getting files content.
function dados() { // BETA
	$file = array ();
	$iterator = new DirectoryIterator ( "update" );
	
	foreach ( $iterator as $entry ) {
		$var = $entry->getFilename ();
		
		$file [] = @file_get_contents ( "update" . DIRECTORY_SEPARATOR . $var );
	}
	
	foreach ( $file as $id => $dados_brutos ) {
		$shit = @explode ( PHP_EOL, $dados_brutos );
		if (count ( $shit ) > 5) {
			foreach ( $shit as $s ) {
				preg_match_all ( '/"(.*?)","(.*?)","(.*?)","(.*?)","(.*?)","(.*?)"/i', $s, $d );
				if ($s != null) {
					$file [$d [5] [0]] = $s;
				}
			}
		}
	}
	$files = null;
	$shit = null;
	
	$file = array_unique ( $file );
	
	return $file;
}

// Download
function downcode($dados) { // para download do código XPL
	$path = "files" . DIRECTORY_SEPARATOR . $dados [1] [0] . DIRECTORY_SEPARATOR . strtolower ( $dados [2] [0] ) . DIRECTORY_SEPARATOR . $dados [4] [0] . ".txt";
	
	if (file_exists ( $path )) { // Caso o arquivo já exista
		goto break_is_shit;
	}
	
	$xpl = getsource ( $dados [6] [0] );
	
	if ($dados [1] [0] == "iedb") { // OK
		preg_match_all ( '/pre>(.+)<\/pre/s', $xpl ["s"], $code );
		$code = html_entity_decode ( $code [1] [0] );
	}
	
	if ($dados [1] [0] == "exploit-db") { // OK
		$code = getsource ( "https://www.exploit-db.com/download/" . $dados [4] [0] );
	}
	
	if ($dados [1] [0] == "siph0n") { // OK
		preg_match_all ( '/pre>(.+)<\/pre/s', $xpl ["s"], $code );
		$code = html_entity_decode ( $code [1] [0] );
		if (preg_match ( "#<a class=\"__cf_email__\"#si", $code )) {
			preg_match_all ( '#<a class="__cf_email__" href="/cdn-cgi/l/email-protection" data-cfemail="(.*?)"#si', $code, $cfemail );
			$code = str_replace ( '<a class="__cf_email__" href="/cdn-cgi/l/email-protection" data-cfemail="' . $cfemail [1] [0] . '">[email protected]</a><script data-cfhash=\'f9e31\' type="text/javascript">/* <![CDATA[ */!function(t,e,r,n,c,a,p){try{t=document.currentScript||function(){for(t=document.getElementsByTagName(\'script\'),e=t.length;e--;)if(t[e].getAttribute(\'data-cfhash\'))return t[e]}();if(t&&(c=t.previousSibling)){p=t.parentNode;if(a=c.getAttribute(\'data-cfemail\')){for(e=\'\',r=\'0x\'+a.substr(0,2)|0,n=2;a.length-n;n+=2)e+=\'%\'+(\'0\'+(\'0x\'+a.substr(n,2)^r).toString(16)).slice(-2);p.replaceChild(document.createTextNode(decodeURIComponent(e)),c)}p.removeChild(t)}}catch(u){}}()/* ]]> */</script>', "[email protected]", $code );
		}
	}
	
	if ($dados [1] [0] == "cxsecurity") { // OK
		preg_match_all ( "/<samp>(.*?)<\/samp>/si", $xpl ["s"], $code );
		$code = htmlspecialchars_decode ( $code [1] [0] );
		$code = str_replace ( "&#039;", "'", $code );
		$code = str_replace ( "<br />", "", $code );
	}
	
	if ($dados [1] [0] == "exploit4arab") { // OK
		preg_match_all ( "#</table><pre class='code'>(.*?)</pre><body>#si", $xpl ['s'], $f );
		$code = str_replace ( "<br />", "", $f [1] [0] );
		$code = html_entity_decode ( $code );
	}
	
	if ($dados [1] [0] == "packetstorm") { // OK
		$code = html_entity_decode ( $xpl ['s'] );
	}
	
	if (! file_exists ( "files" . DIRECTORY_SEPARATOR . $dados [1] [0] )) { // DATABASE
		mkdir ( "files" . DIRECTORY_SEPARATOR . $dados [1] [0] );
	}
	if (! file_exists ( "files" . DIRECTORY_SEPARATOR . $dados [1] [0] . DIRECTORY_SEPARATOR . strtolower ( $dados [2] [0] ) )) { // TYPE
		mkdir ( "files" . DIRECTORY_SEPARATOR . $dados [1] [0] . DIRECTORY_SEPARATOR . strtolower ( $dados [2] [0] ) );
	}
	
	file_put_contents ( $path, $code );
	break_is_shit:
}
	
// Get URL
function getsource($url) {
	if (function_exists ( 'curl_init' )) {
		$cURL = curl_init ( $url ); // indicando a URL
		curl_setopt ( $cURL, CURLOPT_USERAGENT, UserAgent () ); // Setando o UserAgent
		curl_setopt ( $cURL, CURLOPT_RETURNTRANSFER, TRUE ); // permitindo que o código fonte retorne
		curl_setopt ( $cURL, CURLOPT_FOLLOWLOCATION, TRUE );
		$sour ["s"] = curl_exec ( $cURL ); // executando a operação
		$sour ["i"] = curl_getinfo ( $cURL, CURLINFO_HTTP_CODE );
		curl_close ( $cURL ); // fechando a conexão
		return $sour; // retornando os dados pela function
	} else {
		exit ( "\n\tERROR: cURL is no enabled.\n\n" );
	}
}
function UserAgent() { // Gera o UserAgent
                       // Arrays com as infos para os UserAgent's aleatórios
	$UA [1] = array (
			"SeaMonkey",
			"Mobile",
			"Opera",
			"Safari",
			"GoogleBot",
			"K-Meleon",
			"SO" => array (
					"NetSecL Linux",
					"Dragora Linux",
					"ArchBSD",
					"Ubunto Linux",
					"Android",
					"Debian Linux" 
			),
			"LNG" => array (
					"en-US",
					"pt-BR",
					"cs-CZ",
					"pt_PT",
					"ru-RU",
					"en-IN" 
			) 
	);
	$UA [2] = array (
			"Firefox",
			"Mobile",
			"Opera",
			"Safari",
			"GoogleBot",
			"Galaxy",
			"SO" => array (
					"5.1.2600",
					"6.0",
					"6.1.7601",
					"6.2",
					"6.3",
					"6.4" 
			),
			"LNG" => array (
					"en-US",
					"pt-BR",
					"cs-CZ",
					"pt_PT",
					"ru-RU",
					"en-IN" 
			) 
	);
	
	// Monstando o UserAgent
	if (rand ( 1, 2 ) == 1) {
		$USA = $UA [1] [rand ( 0, 5 )] . "./" . rand ( 0, 5 ) . "." . rand ( 0, 5 ) . " (" . $UA [1] ["SO"] [rand ( 0, 5 )] . "; " . $UA [1] ["LNG"] [rand ( 0, 5 )] . ";)";
	} else {
		$USA = "Mozilla/5.0 (Windows NT " . $UA [2] ["SO"] [rand ( 0, 5 )] . "; " . $UA [2] ["LNG"] [rand ( 0, 5 )] . ") (KHTML, like Gecko) " . $UA [2] [rand ( 0, 5 )] . "/" . rand ( 5, 15 ) . "." . rand ( 10, 25 );
	}
	
	return $USA;
}

?>